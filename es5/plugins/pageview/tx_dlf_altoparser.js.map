{"version":3,"sources":["plugins/pageview/tx_dlf_altoparser.js"],"names":["dlfAltoParser","opt_imageObj","opt_width","opt_height","opt_offset","image_","dlfUtils","exists","undefined","width_","height_","offset_","prototype","generateId_","width","height","hpos","vpos","heigt_","isNaN","parseAltoFeature_","node","type","nodeName","toLowerCase","feature","hasAttribute","parseFeatureWithGeometry_","ol","Feature","setProperties","get","parsePrintSpaceFeature_","parseTextBlockFeatures_","parseTextLineFeatures_","parseContentFeatures_","parseFeatures","document","parsedDoc","parseXML_","pageFeatures","pageElements","$","find","i","length","getStringFeatures","textblockFeatures","stringFeatures","forEach","textblock","textline","content","push","getTextblocks","getTextlines","textlines","concat","geometry","parseGeometry_","parseInt","getAttribute","id","setId","x1","y1","x2","y2","coordinatesWithoutScale","geom","Polygon","scale","displayedImageHeight","offset","coordinatesRescale","printspace","textblockElements","fulltext","j","textlineElements","textlineFeatures","fulltextElements","textlineContentElements","children","textlineContentFeatures","String","parseXML"],"mappings":"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","file":"tx_dlf_altoparser.js","sourcesContent":["/**\n * (c) Kitodo. Key to digital objects e.V. <contact@kitodo.org>\n *\n * This file is part of the Kitodo and TYPO3 projects.\n *\n * @license GNU General Public License version 3 or later.\n * For the full copyright and license information, please read the\n * LICENSE.txt file that was distributed with this source code.\n */\n\n/**\n * @constructor\n * @param {Object=} opt_imageObj\n * @param {number=} opt_width\n * @param {number=} opt_height\n * @param {number=} opt_offset\n */\nvar dlfAltoParser = function(opt_imageObj, opt_width, opt_height, opt_offset) {\n\n    /**\n     * @type {Object|undefined}\n     * @private\n     */\n    this.image_ = dlfUtils.exists(opt_imageObj) ? opt_imageObj : undefined;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.width_ = dlfUtils.exists(opt_width) ? opt_width : undefined;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.height_ = dlfUtils.exists(opt_height) ? opt_height : undefined;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.offset_ = dlfUtils.exists(opt_offset) ? opt_offset : undefined;\n};\n\n/**\n * @param {number} width\n * @param {number} height\n * @param {number} hpos\n * @param {number} vpos\n * @private\n */\ndlfAltoParser.prototype.generateId_ = function(width, height, hpos, vpos) {\n    var heigt_ = isNaN(height) ? '0' : height;\n    return '' + width + '_' + heigt_ + '_' + hpos + '_' + vpos;\n};\n\n/**\n * Parse from an alto element a OpenLayers feature object. This function does reproduce the parsing hierarchy of this parser.\n * @param {Element} node\n * @return {ol.Feature}\n * @private\n */\ndlfAltoParser.prototype.parseAltoFeature_ = function(node) {\n    var type = node.nodeName.toLowerCase(),\n        feature;\n\n    // first parse the node as feature\n    if (type === 'printspace' || type === 'textblock' || type === 'textline' || node.hasAttribute('WIDTH')) {\n        feature = this.parseFeatureWithGeometry_(node);\n    } else {\n        var feature = new ol.Feature();\n        feature.setProperties({'type': node.nodeName.toLowerCase()});\n    };\n\n    // parse child nodes\n    if (type === 'page') {\n        // try to update the general width and height for rescaling\n        var width = feature.get('width'),\n            height = feature.get('height');\n\n        if ((dlfUtils.exists(width) && dlfUtils.exists(height)) && (!dlfUtils.exists(this.width_) && !dlfUtils.exists(this.width_))) {\n            this.width_ = width;\n            this.height_ = height;\n        }\n\n        // add child features\n        feature.setProperties({'printspace': this.parsePrintSpaceFeature_(node)});\n    } else if (type === 'printspace') {\n        // try to update the general width and height for rescaling\n        var width = feature.get('width'),\n            height = feature.get('height');\n\n        if ((dlfUtils.exists(width) && dlfUtils.exists(height)) && (!dlfUtils.exists(this.width_) && !dlfUtils.exists(this.width_))) {\n            this.width_ = width;\n            this.height_ = height;\n        }\n\n        // add child features\n        feature.setProperties({'textblocks': this.parseTextBlockFeatures_(node)});\n    } else if (type === 'textblock') {\n        feature.setProperties({'textlines': this.parseTextLineFeatures_(node)});\n    } else if (type === 'textline') {\n        feature.setProperties({'content': this.parseContentFeatures_(node)});\n    }\n\n    return feature;\n};\n\n/**\n * @param {XMLDocument|string} document\n * @return {Array.<ol.Feature>}\n */\ndlfAltoParser.prototype.parseFeatures = function(document) {\n    var parsedDoc = this.parseXML_(document),\n        pageFeatures = [],\n        pageElements = $(parsedDoc).find('Page');\n\n    for (var i = 0; i < pageElements.length; i++) {\n        // parse page feature\n        var feature = this.parseAltoFeature_(pageElements[i]);\n\n        /**\n         * Attach function for a better access of of string elements\n         * @return {Array}\n         */\n        feature.getStringFeatures = function() {\n            var textblockFeatures = this.get('printspace').get('textblocks'),\n                stringFeatures = [];\n\n            textblockFeatures.forEach(function(textblock) {\n\n                if (textblock !== undefined && textblock.get('textlines').length > 0) {\n\n                    textblock.get('textlines').forEach(function(textline) {\n\n                        if (textline !== undefined && textline.get('content').length > 0) {\n\n                            textline.get('content').forEach(function(content) {\n\n                                if (content !== undefined && content.get('type') === 'string') {\n                                    stringFeatures.push(content);\n                                }\n\n                            });\n                        }\n\n                    });\n\n                }\n\n            });\n\n            return stringFeatures;\n        };\n\n        /**\n         * Add function for getting the text blocks\n         * @return {Array}\n         */\n        feature.getTextblocks = function() {\n            if (this.get('printspace') !== undefined && this.get('printspace').get('textblocks'))\n                return this.get('printspace').get('textblocks')\n            return [];\n        };\n\n        /**\n         * Adding function for getting the textline\n         * @return {Array}\n         */\n        feature.getTextlines = function() {\n            var textlines = [];\n            this.getTextblocks().forEach(function(textblock) {\n                textlines = textlines.concat(textblock.get('textlines'));\n            });\n            return textlines;\n        };\n\n        pageFeatures.push(feature);\n    };\n\n    return pageFeatures;\n};\n\n/**\n * Parse from an alto element a OpenLayers feature object\n * @param {Element} node\n * @return {ol.Feature}\n * @private\n */\ndlfAltoParser.prototype.parseFeatureWithGeometry_ = function(node) {\n    var geometry = this.parseGeometry_(node),\n        width = parseInt(node.getAttribute(\"WIDTH\")),\n        height = parseInt(node.getAttribute(\"HEIGHT\")),\n        hpos = parseInt(node.getAttribute(\"HPOS\")),\n        vpos = parseInt(node.getAttribute(\"VPOS\")),\n        type = node.nodeName.toLowerCase(),\n        id = this.generateId_(width, height, hpos, vpos),\n        feature = new ol.Feature(geometry);\n\n    feature.setId(id);\n    feature.setProperties({\n        'type':type,\n        'width': width,\n        'height': height,\n        'hpos': hpos,\n        'vpos': vpos\n    });\n\n    return feature;\n};\n\n/**\n * Parse from an alto element a OpenLayers geometry object\n * @param {Element} node\n * @return {ol.geom.Polygon|undefined}\n * @private\n */\ndlfAltoParser.prototype.parseGeometry_ = function(node) {\n    var width = parseInt(node.getAttribute(\"WIDTH\")),\n        height = parseInt(node.getAttribute(\"HEIGHT\")),\n        x1 = parseInt(node.getAttribute(\"HPOS\")),\n        y1 = parseInt(node.getAttribute(\"VPOS\")),\n        x2 = x1 + width,\n        y2 = y1 + height,\n        coordinatesWithoutScale = [[[x1, y1], [x2, y1], [x2, y2], [x1, y2], [x1, y1]]];\n\n    if (isNaN(width) || isNaN(height))\n        return undefined;\n\n    // return geometry without rescale\n    if (!dlfUtils.exists(this.image_) || !dlfUtils.exists(this.width_))\n        return new ol.geom.Polygon(coordinatesWithoutScale);\n\n    // rescale coordinates\n    var scale = this.image_.width / this.width_,\n        displayedImageHeight = this.image_.height,\n        offset = dlfUtils.exists(this.offset_) ? this.offset_ : 0,\n        coordinatesRescale = [];\n\n    for (var i = 0; i < coordinatesWithoutScale[0].length; i++) {\n        coordinatesRescale.push([offset + ( scale * coordinatesWithoutScale[0][i][0]),\n            displayedImageHeight - (scale * coordinatesWithoutScale[0][i][1])]);\n    };\n\n    return new ol.geom.Polygon([coordinatesRescale]);\n};\n\n/**\n * @param {Element} node\n * @return {ol.Feature|undefined}\n * @private\n */\ndlfAltoParser.prototype.parsePrintSpaceFeature_ = function(node) {\n    var printspace = $(node).find('PrintSpace');\n\n    if (printspace.length === 0)\n        return;\n    return this.parseAltoFeature_(printspace[0]);\n};\n\n/**\n * @param {Element} node\n * @return {Array.<ol.Feature>}\n * @private\n */\ndlfAltoParser.prototype.parseTextBlockFeatures_ = function(node) {\n    var textblockElements = $(node).find('TextBlock'),\n        textblockFeatures = [];\n\n    for (var i = 0; i < textblockElements.length; i++) {\n        var feature = this.parseAltoFeature_(textblockElements[i]),\n            textlines = feature.get('textlines'),\n            fulltext = '';\n\n        // aggregated fulltexts\n        for (var j = 0; j < textlines.length; j++) {\n            fulltext += textlines[j].get('fulltext') + '\\n';\n        };\n        feature.setProperties({'fulltext':fulltext});\n\n        textblockFeatures.push(feature);\n    };\n\n    return textblockFeatures;\n};\n\n/**\n * @param {Element} node\n * @return {Array.<ol.Feature>}\n * @private\n */\ndlfAltoParser.prototype.parseTextLineFeatures_ = function(node) {\n    var textlineElements = $(node).find('TextLine'),\n        textlineFeatures = [];\n\n    for (var i = 0; i < textlineElements.length; i++) {\n        var feature = this.parseAltoFeature_(textlineElements[i]),\n            fulltextElements = feature.get('content'),\n            fulltext = '';\n\n        // parse fulltexts\n        for (var j = 0; j < fulltextElements.length; j++) {\n            fulltext += fulltextElements[j].get('fulltext');\n        };\n        feature.setProperties({'fulltext':fulltext});\n\n        textlineFeatures.push(feature);\n    };\n\n    return textlineFeatures;\n};\n\n/**\n * @param {Element} node\n * @return {Array.<ol.Feature>}\n * @private\n */\ndlfAltoParser.prototype.parseContentFeatures_ = function(node) {\n    var textlineContentElements = $(node).children(),\n        textlineContentFeatures = [];\n\n    for (var i = 0; i < textlineContentElements.length; i++) {\n        var feature = this.parseFeatureWithGeometry_(textlineContentElements[i]),\n            fulltext = '';\n\n        // parse fulltexts\n        switch (textlineContentElements[i].nodeName.toLowerCase()) {\n            case 'string':\n                fulltext = textlineContentElements[i].getAttribute('CONTENT');\n                break;\n            case 'sp':\n                fulltext = ' ';\n                break;\n            case 'hyp':\n                fulltext = '-';\n                break;\n            default:\n                fulltext = '';\n        };\n        feature.setProperties({'fulltext':fulltext});\n\n        textlineContentFeatures.push(feature);\n    };\n\n    return textlineContentFeatures;\n};\n\n\n\n/**\n *\n * @param {XMLDocument|string}\n * @return {XMLDocument}\n * @private\n */\ndlfAltoParser.prototype.parseXML_ = function(document) {\n    if (typeof document === 'string' || document instanceof String) {\n        return $.parseXML(document);\n    };\n    return document;\n};\n"],"sourceRoot":"/home/christopher/IdeaProjects/kitodo-presentation/es6"}