{"version":3,"sources":["plugins/pageview/tx_dlf_utils.js"],"names":["dlfUtils","CUSTOM_MIMETYPE","IIIF","IIP","ZOOMIFY","RUNNING_INDEX","createOl3Layers","imageSourceObjs","opt_origin","origin","undefined","widthSum","offsetWidth","layers","forEach","imageSourceObj","tileSize","extent","width","height","layer","mimetype","ol","Tile","source","Zoomify","url","src","size","crossOrigin","offset","tilesize","length","format","$","inArray","formats","quality","qualities","dlfViewerSource","resolutions","projection","proj","Projection","code","units","Image","ImageStatic","imageExtent","push","createOl3View","images","maxLonX","reduce","prev","curr","maxLatY","Math","max","window","OL3_MAX_ZOOM","viewParams","center","getCenter","zoom","maxZoom","View","exists","val","fetchImageData","deferredResponse","Deferred","imageSourceData","loadCount","finishLoading","resolve","index","fetchZoomifyData","done","imageSourceDataObj","getIIIFResource","fetchIIPData","fetchStaticImageData","image","onload","imageDataObj","type","ajax","getMetdadataURL","dataType","cb","fail","error","data","supportsIIIF","protocol","uri","decodeURI","removeInfoJson","imageResource","buildImageV2","buildImageV1","jqXHR","errorThrown","console","log","status","endsWith","substr","lastIndexOf","profile","indexOf","identifier","documentElement","tagName","namespaceURI","jsonld","tiles","map","a","b","scaleFactors","tile_width","tile_height","scale_factors","response","Error","extend","parseMetadata","properties","find","URL","substring","parseInt","attr","getCookie","name","results","document","cookie","match","getUrlParams","Object","prototype","hasOwnProperty","call","location","search","decodeURIComponent","slice","split","params","item","s","isNull","isNullEmptyUndefinedOrNoNumber","isNaN","isCorsEnabled","imageObjs","hostname","port","imageObj","replace","pathname","encodeURIComponent","async","isWebGLEnabled","WebGLRenderingContext","canvas","createElement","rendererNames","context","i","getContext","getParameter","e","parseDataDic","element","dataDicString","dataDicRecords","dataDic","ii","key","value","setCookie","scaleToImageSize","features","opt_offset","scale","displayImageHeight","oldCoordinates","getGeometry","getCoordinates","newCoordinates","j","setGeometry","geom","Polygon","setId","searchFeatureCollectionForText","featureCollection","text","ft","get","toLowerCase"],"mappings":";;AAAA;;;;;;;;;;AAUA;;;;;AAKA,IAAIA,WAAWA,YAAY,EAA3B;;AAEA;;;AAGAA,SAASC,eAAT,GAA2B;AACvBC,UAAM,6BADiB;AAEvBC,SAAK,wBAFkB;AAGvBC,aAAS;AAHc,CAA3B;;AAMA;;;AAGAJ,SAASK,aAAT,GAAyB,QAAzB;;AAEA;;;;;AAKAL,SAASM,eAAT,GAA2B,UAASC,eAAT,EAA0BC,UAA1B,EAAsC;;AAE7D,QAAIC,SAASD,eAAeE,SAAf,GAA2BF,UAA3B,GAAwC,IAArD;AAAA,QACIG,WAAW,CADf;AAAA,QAEIC,cAAc,CAFlB;AAAA,QAGIC,SAAS,EAHb;;AAKAN,oBAAgBO,OAAhB,CAAwB,UAASC,cAAT,EAAyB;AAC7C,YAAIC,iBAAJ;AACA,YAAIL,WAAW,CAAf,EAAkB;AACd;AACAC,0BAAcD,QAAd;AACH;;AAED;AACA;AACA;AACA,YAAIM,SAAS,CAACL,WAAD,EAAc,CAAd,EAAiBG,eAAeG,KAAf,GAAuBN,WAAxC,EAAqDG,eAAeI,MAApE,CAAb;AAAA,YACIC,cADJ;;AAGA,YAAIL,eAAeM,QAAf,KAA4BrB,SAASC,eAAT,CAAyBG,OAAzD,EAAkE;AAC9D;AACAgB,oBAAQ,IAAIE,GAAGF,KAAH,CAASG,IAAb,CAAkB;AACtBC,wBAAQ,IAAIF,GAAGE,MAAH,CAAUC,OAAd,CAAsB;AAC1BC,yBAAKX,eAAeY,GADM;AAE1BC,0BAAM,CAACb,eAAeG,KAAhB,EAAuBH,eAAeI,MAAtC,CAFoB;AAG1BU,iCAAapB,MAHa;AAI1BqB,4BAAQ,CAAClB,WAAD,EAAc,CAAd;AAJkB,iBAAtB;AADc,aAAlB,CAAR;AAQH,SAVD,MAUO,IAAIG,eAAeM,QAAf,KAA4BrB,SAASC,eAAT,CAAyBC,IAAzD,EAA+D;;AAElEc,uBAAWD,eAAegB,QAAf,KAA4BrB,SAA5B,IAAyCK,eAAegB,QAAf,CAAwBC,MAAxB,GAAiC,CAA1E,GACLjB,eAAegB,QAAf,CAAwB,CAAxB,CADK,GAEL,GAFN,EAGIE,SAASC,EAAEC,OAAF,CAAU,KAAV,EAAiBpB,eAAeqB,OAAhC,KAA4CF,EAAEC,OAAF,CAAU,MAAV,EAAkBpB,eAAeqB,OAAjC,CAA5C,GACH,KADG,GAEHrB,eAAeqB,OAAf,CAAuBJ,MAAvB,GAAgC,CAAhC,GACIjB,eAAeqB,OAAf,CAAuB,CAAvB,CADJ,GAEI,KAPd,EAQIC,UAAUtB,eAAeuB,SAAf,KAA6B5B,SAA7B,IAA0CK,eAAeuB,SAAf,CAAyBN,MAAzB,GAAkC,CAA5E,GACJjB,eAAeuB,SAAf,CAAyB,CAAzB,CADI,GAEJ,QAVV;;AAYAlB,oBAAQ,IAAIE,GAAGF,KAAH,CAASG,IAAb,CAAkB;AACtBC,wBAAQ,IAAIe,gBAAgBrC,IAApB,CAAyB;AAC7BwB,yBAAKX,eAAeY,GADS;AAE7BC,0BAAM,CAACb,eAAeG,KAAhB,EAAuBH,eAAeI,MAAtC,CAFuB;AAG7BU,iCAAapB,MAHgB;AAI7B+B,iCAAazB,eAAeyB,WAJC;AAK7BxB,8BAAUA,QALmB;AAM7BiB,4BAAQA,MANqB;AAO7BI,6BAASA,OAPoB;AAQ7BP,4BAAQ,CAAClB,WAAD,EAAc,CAAd,CARqB;AAS7B6B,gCAAY,IAAInB,GAAGoB,IAAH,CAAQC,UAAZ,CAAuB;AAC/BC,8BAAM,aADyB;AAE/BC,+BAAO,QAFwB;AAG/B5B,gCAAQA;AAHuB,qBAAvB;AATiB,iBAAzB;AADc,aAAlB,CAAR;AAiBH,SA/BM,MA+BA,IAAIF,eAAeM,QAAf,KAA4BrB,SAASC,eAAT,CAAyBE,GAAzD,EAA8D;AACjEa,uBAAWD,eAAegB,QAAf,KAA4BrB,SAA5B,IAAyCK,eAAegB,QAAf,CAAwBC,MAAxB,GAAiC,CAA1E,GACLjB,eAAegB,QAAf,CAAwB,CAAxB,CADK,GAEL,GAFN;;AAIAX,oBAAQ,IAAIE,GAAGF,KAAH,CAASG,IAAb,CAAkB;AACtBC,wBAAQ,IAAIe,gBAAgBpC,GAApB,CAAwB;AAC5BuB,yBAAKX,eAAeY,GADQ;AAE5BC,0BAAM,CAACb,eAAeG,KAAhB,EAAuBH,eAAeI,MAAtC,CAFsB;AAG5BU,iCAAapB,MAHe;AAI5BO,8BAAUA,QAJkB;AAK5Bc,4BAAQ,CAAClB,WAAD,EAAc,CAAd;AALoB,iBAAxB;AADc,aAAlB,CAAR;AASH,SAdM,MAcA;;AAEH;AACAQ,oBAAQ,IAAIE,GAAGF,KAAH,CAAS0B,KAAb,CAAmB;AACvBtB,wBAAQ,IAAIF,GAAGE,MAAH,CAAUuB,WAAd,CAA0B;AAC9BrB,yBAAKX,eAAeY,GADU;AAE9Bc,gCAAY,IAAInB,GAAGoB,IAAH,CAAQC,UAAZ,CAAuB;AAC/BC,8BAAM,aADyB;AAE/BC,+BAAO,QAFwB;AAG/B5B,gCAAQA;AAHuB,qBAAvB,CAFkB;AAO9B+B,iCAAa/B,MAPiB;AAQ9BY,iCAAapB;AARiB,iBAA1B;AADe,aAAnB,CAAR;AAYH;AACDI,eAAOoC,IAAP,CAAY7B,KAAZ;;AAEA;AACAT,oBAAYI,eAAeG,KAA3B;AACH,KAxFD;;AA0FA,WAAOL,MAAP;AACH,CAlGD;;AAoGA;;;;AAIAb,SAASkD,aAAT,GAAyB,UAASC,MAAT,EAAiB;;AAEtC;AACA;AACA;AACA,QAAIC,UAAUD,OAAOE,MAAP,CAAc,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACzC,eAAOD,OAAOC,KAAKrC,KAAnB;AACH,KAFS,EAEP,CAFO,CAAd;AAAA,QAGIsC,UAAUL,OAAOE,MAAP,CAAc,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACzC,eAAOE,KAAKC,GAAL,CAASJ,IAAT,EAAeC,KAAKpC,MAApB,CAAP;AACH,KAFS,EAEP,CAFO,CAHd;AAAA,QAMIF,SAASkC,OAAO,CAAP,EAAU9B,QAAV,KAAuBrB,SAASC,eAAT,CAAyBG,OAAhD,IACT+C,OAAO,CAAP,EAAU9B,QAAV,KAAuBrB,SAASC,eAAT,CAAyBC,IADvC,IAETiD,OAAO,CAAP,EAAU9B,QAAV,KAAuBrB,SAASC,eAAT,CAAyBE,GAFvC,GAGH,CAAC,CAAD,EAAI,CAAJ,EAAOiD,OAAP,EAAgBI,OAAhB,CAHG,GAIH,CAAC,CAAD,EAAI,CAACA,OAAL,EAAcJ,OAAd,EAAuB,CAAvB,CAVV;;AAYA;AACAO,WAAOC,YAAP,GAAsB,CAAtB;;AAEA;AACA,QAAMlB,OAAO,IAAIpB,GAAGoB,IAAH,CAAQC,UAAZ,CAAuB;AAChCC,cAAM,aAD0B;AAEhCC,eAAO,QAFyB;AAGhC5B,gBAAQA;AAHwB,KAAvB,CAAb;;AAMA;AACA,QAAM4C,aAAa;AACfpB,oBAAYC,IADG;AAEfoB,gBAAQxC,GAAGL,MAAH,CAAU8C,SAAV,CAAoB9C,MAApB,CAFO;AAGf+C,cAAM,CAHS;AAIfC,iBAASN,OAAOC,YAJD;AAKf3C,gBAAQA;AALO,KAAnB;;AAQA,WAAO,IAAIK,GAAG4C,IAAP,CAAYL,UAAZ,CAAP;AACH,CArCD;;AAuCA;;;;;AAKA7D,SAASmE,MAAT,GAAkB,UAASC,GAAT,EAAc;AAC5B,WAAOA,QAAQ1D,SAAf;AACH,CAFD;;AAIA;;;;;;AAMAV,SAASqE,cAAT,GAA0B,UAAS9D,eAAT,EAA0B;;AAEhD;AACA,QAAM+D,mBAAmB,IAAIpC,EAAEqC,QAAN,EAAzB;;AAEA;;;;AAIA,QAAIC,kBAAkB,EAAtB;AAAA,QACIC,YAAY,CADhB;AAAA,QAEIC,gBAAgB,SAAhBA,aAAgB,GAAW;AACvBD,qBAAa,CAAb;;AAEA,YAAIA,cAAclE,gBAAgByB,MAAlC,EACIsC,iBAAiBK,OAAjB,CAAyBH,eAAzB;AACP,KAPL;;AASAjE,oBAAgBO,OAAhB,CAAwB,UAASC,cAAT,EAAyB6D,KAAzB,EAAgC;AACpD,YAAI7D,eAAeM,QAAf,KAA4BrB,SAASC,eAAT,CAAyBG,OAAzD,EAAkE;AAC9DJ,qBAAS6E,gBAAT,CAA0B9D,cAA1B,EACK+D,IADL,CACU,UAASC,kBAAT,EAA6B;AAC/BP,gCAAgBI,KAAhB,IAAyBG,kBAAzB;AACAL;AACH,aAJL;AAKH,SAND,MAMO,IAAI3D,eAAeM,QAAf,KAA4BrB,SAASC,eAAT,CAAyBC,IAAzD,EAA+D;AAClEF,qBAASgF,eAAT,CAAyBjE,cAAzB,EACK+D,IADL,CACU,UAASC,kBAAT,EAA6B;AAC/BP,gCAAgBI,KAAhB,IAAyBG,kBAAzB;AACAL;AACH,aAJL;AAKH,SANM,MAMA,IAAI3D,eAAeM,QAAf,KAA4BrB,SAASC,eAAT,CAAyBE,GAAzD,EAA8D;AACjEH,qBAASiF,YAAT,CAAsBlE,cAAtB,EACK+D,IADL,CACU,UAASC,kBAAT,EAA6B;AAC/BP,gCAAgBI,KAAhB,IAAyBG,kBAAzB;AACAL;AACH,aAJL;AAKH,SANM,MAMA;AACH;AACA1E,qBAASkF,oBAAT,CAA8BnE,cAA9B,EACK+D,IADL,CACU,UAASC,kBAAT,EAA6B;AAC/BP,gCAAgBI,KAAhB,IAAyBG,kBAAzB;AACAL;AACH,aAJL;AAKH;AACJ,KA3BD;;AA6BA,WAAOJ,gBAAP;AACH,CAhDD;;AAmDA;;;;;;AAMAtE,SAASkF,oBAAT,GAAgC,UAASnE,cAAT,EAAyB;;AAErD;AACA,QAAMuD,mBAAmB,IAAIpC,EAAEqC,QAAN,EAAzB;;AAEA;AACA,QAAMY,QAAQ,IAAIrC,KAAJ,EAAd;;AAEA;AACAqC,UAAMC,MAAN,GAAe,YAAW;;AAEtB,YAAMC,eAAe;AACjB1D,iBAAK,KAAKA,GADO;AAEjBN,sBAAUN,eAAeM,QAFR;AAGjBH,mBAAO,KAAKA,KAHK;AAIjBC,oBAAQ,KAAKA;AAJI,SAArB;;AAOAmD,yBAAiBK,OAAjB,CAAyBU,YAAzB;AACH,KAVD;;AAYA;AACAF,UAAMxD,GAAN,GAAYZ,eAAeW,GAA3B;;AAEA,WAAO4C,gBAAP;AACH,CAzBD;;AA2BA;;;;AAIAtE,SAASgF,eAAT,GAA2B,SAASA,eAAT,CAAyBjE,cAAzB,EAAyC;;AAEhE,QAAMuD,mBAAmB,IAAIpC,EAAEqC,QAAN,EAAzB;AACA,QAAMe,OAAO,KAAb;AACApD,MAAEqD,IAAF,CAAO;AACH7D,aAAKa,gBAAgBrC,IAAhB,CAAqBsF,eAArB,CAAqCzE,eAAeW,GAApD,CADF;AAEH4D,cAAMA,IAFH;AAGHG,kBAAU;AAHP,KAAP,EAIGX,IAJH,CAIQY,EAJR,EAIYC,IAJZ,CAIiBC,KAJjB;;AAMA,aAASF,EAAT,CAAYG,IAAZ,EAAkB;AACd,YAAMxE,WAAWN,eAAeM,QAAhC;AACA,YAAIrB,SAAS8F,YAAT,CAAsBD,IAAtB,CAAJ,EAAiC;AAC7B,gBAAIA,KAAKE,QAAL,IAAiBF,KAAKE,QAAL,KAAkB,0BAAvC,EAAmE;AAC/D,oBAAIC,MAAMC,UAAUJ,KAAK,KAAL,CAAV,CAAV;AACAG,sBAAMhG,SAASkG,cAAT,CAAwBF,GAAxB,CAAN;AACA,oBAAMG,gBAAgBnG,SAASoG,YAAT,CAAsB/E,QAAtB,EAAgC2E,GAAhC,EAAqCH,IAArC,CAAtB;AACAvB,iCAAiBK,OAAjB,CAAyBwB,aAAzB;AACH,aALD,MAKO;AACH,oBAAIH,OAAMjF,eAAeW,GAAzB;AACAsE,uBAAMhG,SAASkG,cAAT,CAAwBF,IAAxB,CAAN;AACA,oBAAMG,iBAAgBnG,SAASqG,YAAT,CAAsBhF,QAAtB,EAAgC2E,IAAhC,EAAqCH,IAArC,CAAtB;AACAvB,iCAAiBK,OAAjB,CAAyBwB,cAAzB;AACH;AACJ;AACJ;;AAED,aAASP,KAAT,CAAeU,KAAf,EAAsBC,WAAtB,EAAmC;AAC/BC,gBAAQC,GAAR,CAAY,OAAZ,EAAqBH,MAAMI,MAA3B;AACAF,gBAAQC,GAAR,CAAY,aAAaF,WAAzB;AACH;;AAED,WAAOjC,gBAAP;AACH,CAjCD;;AAmCA;;;;AAIAtE,SAASkG,cAAT,GAA0B,SAASA,cAAT,CAAwBF,GAAxB,EAA6B;AACnD,QAAIA,IAAIW,QAAJ,CAAa,YAAb,CAAJ,EAAgC;AAC5BX,cAAMA,IAAIY,MAAJ,CAAW,CAAX,EAAcZ,IAAIa,WAAJ,CAAgB,GAAhB,CAAd,CAAN;AACH;AACD,WAAOb,GAAP;AACH,CALD;;AAOA;;;;;;;;;;;AAWAhG,SAAS8F,YAAT,GAAwB,SAASA,YAAT,CAAsBD,IAAtB,EAA4B;AAChD;AACA,QAAIA,KAAKE,QAAL,IAAiBF,KAAKE,QAAL,KAAkB,0BAAvC,EAAmE;AAC/D,eAAO,IAAP;AACA;AACH,KAHD,MAGO,IAAIF,KAAK,UAAL,MACPA,KAAK,UAAL,MAAqB,6DAArB,IACAA,KAAK,UAAL,MAAqB,yCAFd,CAAJ,EAE8D;AACjE,eAAO,IAAP;AACA;AACH,KALM,MAKA,IAAIA,KAAKiB,OAAL,IACPjB,KAAKiB,OAAL,CAAaC,OAAb,CAAqB,4DAArB,MAAuF,CADpF,EACuF;AAC1F,eAAO,IAAP;AACH,KAHM,MAGA,IAAIlB,KAAKmB,UAAL,IAAmBnB,KAAK3E,KAAxB,IAAiC2E,KAAK1E,MAA1C,EAAkD;AACrD,eAAO,IAAP;AACH,KAFM,MAEA,OAAQ0E,KAAKoB,eAAL,IAAwB,WAAWpB,KAAKoB,eAAL,CAAqBC,OAAxD,IACf,qDAAqDrB,KAAKoB,eAAL,CAAqBE,YADnE;AAEV,CAjBD;;AAmBA;;;;;;;;;;;;AAYAnH,SAASoG,YAAT,GAAwB,SAASA,YAAT,CAAsB/E,QAAtB,EAAgC2E,GAAhC,EAAqCoB,MAArC,EAA6C;;AAEjE,WAAO;AACHzF,aAAKqE,GADF;AAEH9E,eAAOkG,OAAOlG,KAFX;AAGHC,gBAAQiG,OAAOjG,MAHZ;AAIHY,kBAAU,CAACqF,OAAOC,KAAP,CAAaC,GAAb,CAAiB,UAASC,CAAT,EAAY;AACpC,mBAAOA,EAAErG,KAAT;AACH,SAFU,EAER,CAFQ,CAAD,EAEHkG,OAAOC,KAAP,CAAaC,GAAb,CAAiB,UAASC,CAAT,EAAY;AAChC,mBAAOA,EAAEpG,MAAT;AACH,SAFM,EAEJ,CAFI,CAFG,CAJP;AASHmB,mBAAW8E,OAAON,OAAP,CAAeQ,GAAf,CAAmB,UAASC,CAAT,EAAY;AACtC,mBAAOA,CAAP;AACH,SAFU,EAERD,GAFQ,CAEJ,UAASE,CAAT,EAAY;AACf,mBAAOA,EAAElF,SAAT;AACH,SAJU,EAIR,CAJQ,CATR;AAcHF,iBAASgF,OAAON,OAAP,CAAeQ,GAAf,CAAmB,UAASC,CAAT,EAAY;AACpC,mBAAOA,CAAP;AACH,SAFQ,EAEND,GAFM,CAEF,UAASE,CAAT,EAAY;AACf,mBAAOA,EAAEpF,OAAT;AACH,SAJQ,EAIN,CAJM,CAdN;AAmBHI,qBAAa4E,OAAOC,KAAP,CAAaC,GAAb,CAAiB,UAASC,CAAT,EAAY;AACtC,mBAAOA,EAAEE,YAAT;AACH,SAFY,EAEV,CAFU,CAnBV;AAsBHpG,kBAAUA;AAtBP,KAAP;AAwBH,CA1BD;;AA4BA;;;;;;;;;;;;;;AAcArB,SAASqG,YAAT,GAAwB,SAASA,YAAT,CAAsBhF,QAAtB,EAAgC2E,GAAhC,EAAqCoB,MAArC,EAA6C;;AAEjE,WAAO;AACHzF,aAAKqE,GADF;AAEH9E,eAAOkG,OAAOlG,KAFX;AAGHC,gBAAQiG,OAAOjG,MAHZ;AAIHY,kBAAU,CAACqF,OAAOM,UAAR,EAAoBN,OAAOO,WAA3B,CAJP;AAKHrF,mBAAW8E,OAAO9E,SALf;AAMHF,iBAASgF,OAAOhF,OANb;AAOHI,qBAAa4E,OAAOQ,aAPjB;AAQHvG,kBAAUA;AARP,KAAP;AAUH,CAZD;;AAeA;;;;;;AAMArB,SAASiF,YAAT,GAAwB,UAASlE,cAAT,EAAyB;;AAE7C;AACA,QAAMuD,mBAAmB,IAAIpC,EAAEqC,QAAN,EAAzB;;AAEArC,MAAEqD,IAAF,CAAO;AACH7D,aAAKa,gBAAgBpC,GAAhB,CAAoBqF,eAApB,CAAoCzE,eAAeW,GAAnD,CADF,CACyD;AADzD,KAAP,EAEGoD,IAFH,CAEQY,EAFR;AAGA,aAASA,EAAT,CAAYmC,QAAZ,EAAsBvC,IAAtB,EAA4B;AACxB,YAAIA,SAAS,SAAb,EACI,MAAM,IAAIwC,KAAJ,CAAU,6CAAV,CAAN;;AAEJ,YAAMzC,eAAenD,EAAE6F,MAAF,CAAS;AAC1BpG,iBAAKZ,eAAeW,GADM;AAE1BL,sBAAUN,eAAeM;AAFC,SAAT,EAGlBkB,gBAAgBpC,GAAhB,CAAoB6H,aAApB,CAAkCH,QAAlC,CAHkB,CAArB;;AAKAvD,yBAAiBK,OAAjB,CAAyBU,YAAzB;AACH;;AAED,WAAOf,gBAAP;AACH,CArBD;;AAuBA;;;;;;AAMAtE,SAAS6E,gBAAT,GAA4B,UAAS9D,cAAT,EAAyB;;AAEjD;AACA,QAAMuD,mBAAmB,IAAIpC,EAAEqC,QAAN,EAAzB;;AAEArC,MAAEqD,IAAF,CAAO;AACH7D,aAAKX,eAAeW;AADjB,KAAP,EAEGoD,IAFH,CAEQY,EAFR;AAGA,aAASA,EAAT,CAAYmC,QAAZ,EAAsBvC,IAAtB,EAA4B;AACxB,YAAIA,SAAS,SAAb,EACI,MAAM,IAAIwC,KAAJ,CAAU,6CAAV,CAAN;;AAEJ,YAAMG,aAAa/F,EAAE2F,QAAF,EAAYK,IAAZ,CAAiB,kBAAjB,CAAnB;;AAEA,YAAM7C,eAAe;AACjB1D,iBAAKkG,SAASM,GAAT,CAAaC,SAAb,CAAuB,CAAvB,EAA0BP,SAASM,GAAT,CAAatB,WAAb,CAAyB,GAAzB,IAAgC,CAA1D,CADY;AAEjB3F,mBAAOmH,SAASJ,WAAWK,IAAX,CAAgB,OAAhB,CAAT,CAFU;AAGjBnH,oBAAQkH,SAASJ,WAAWK,IAAX,CAAgB,QAAhB,CAAT,CAHS;AAIjBvG,sBAAUsG,SAASJ,WAAWK,IAAX,CAAgB,UAAhB,CAAT,CAJO;AAKjBjH,sBAAUN,eAAeM;AALR,SAArB;;AAQAiD,yBAAiBK,OAAjB,CAAyBU,YAAzB;AACH;;AAED,WAAOf,gBAAP;AACH,CA1BD;;AA4BA;;;;;AAKAtE,SAASuI,SAAT,GAAqB,UAASC,IAAT,EAAe;;AAEhC,QAAMC,UAAUC,SAASC,MAAT,CAAgBC,KAAhB,CAAsB,YAAYJ,IAAZ,GAAmB,eAAzC,CAAhB;;AAEA,QAAIC,OAAJ,EAAa;;AAET,eAAOxC,UAAUwC,QAAQ,CAAR,CAAV,CAAP;AAEH,KAJD,MAIO;;AAEH,eAAO,IAAP;AAEH;AAEJ,CAdD;;AAgBA;;;;AAIAzI,SAAS6I,YAAT,GAAwB,YAAW;AAC/B,QAAIC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,QAArC,EAA+C,QAA/C,CAAJ,EAA8D;AAC1D,YAAMC,SAASC,mBAAmBF,SAASC,MAA5B,EAAoCE,KAApC,CAA0C,CAA1C,EAA6CC,KAA7C,CAAmD,GAAnD,CAAf;AAAA,YACIC,SAAS,EADb;;AAGAJ,eAAOrI,OAAP,CAAe,UAAS0I,IAAT,EAAe;AAC1B,gBAAMC,IAAID,KAAKF,KAAL,CAAW,GAAX,CAAV;AACAC,mBAAOE,EAAE,CAAF,CAAP,IAAeA,EAAE,CAAF,CAAf;AACH,SAHD;;AAKA,eAAOF,MAAP;AACH;AACD,WAAO7I,SAAP;AAEH,CAdD;;AAgBA;;;;;AAKAV,SAAS0J,MAAT,GAAkB,UAAStF,GAAT,EAAc;AAC5B,WAAOA,QAAQ,IAAf;AACH,CAFD;;AAIA;;;;;AAKApE,SAAS2J,8BAAT,GAA0C,UAASvF,GAAT,EAAc;AACpD,WAAOA,QAAQ,IAAR,IAAgBA,QAAQ1D,SAAxB,IAAqC0D,QAAQ,EAA7C,IAAmDwF,MAAMxF,GAAN,CAA1D;AACH,CAFD;;AAIA;;;;AAIApE,SAAS6J,aAAT,GAAyB,UAASC,SAAT,EAAoB;AACzC;AACA,QAAI,CAACnG,OAAOuF,QAAP,CAAgBzI,MAArB,EAA6B;AACzBkD,eAAOuF,QAAP,CAAgBzI,MAAhB,GAAyBkD,OAAOuF,QAAP,CAAgBnD,QAAhB,GAA2B,IAA3B,GAAkCpC,OAAOuF,QAAP,CAAgBa,QAAlD,IACpBpG,OAAOuF,QAAP,CAAgBc,IAAhB,GAAuB,MAAMrG,OAAOuF,QAAP,CAAgBc,IAA7C,GAAoD,EADhC,CAAzB;AAEH;;AAED;AACA;AACA,QAAInC,WAAW,IAAf;;AAEAiC,cAAUhJ,OAAV,CAAkB,UAASmJ,QAAT,EAAmB;AACjC,YAAIvI,MAAMuI,SAAS5I,QAAT,KAAsBrB,SAASC,eAAT,CAAyBG,OAA/C,GACJ6J,SAASvI,GAAT,CAAawI,OAAb,CAAqB,qBAArB,EAA4C,sBAA5C,CADI,GAGND,SAAS5I,QAAT,KAAsBrB,SAASC,eAAT,CAAyBC,IAA/C,GACMqC,gBAAgBrC,IAAhB,CAAqBsF,eAArB,CAAqCyE,SAASvI,GAA9C,CADN,GAEMuI,SAAS5I,QAAT,KAAsBrB,SAASC,eAAT,CAAyBE,GAA/C,GACAoC,gBAAgBpC,GAAhB,CAAoBqF,eAApB,CAAoCyE,SAASvI,GAA7C,CADA,GAEAuI,SAASvI,GAPnB;;AASAA,cACIiC,OAAOuF,QAAP,CAAgBzI,MAAhB,GAAyBkD,OAAOuF,QAAP,CAAgBiB,QAAzC,GAAoD,6BAApD,GAAoFC,mBAChF1I,GADgF,CAApF,GACW,WAFf;;AAIAQ,UAAEqD,IAAF,CAAO;AACH7D,iBAAKA,GADF;AAEH2I,mBAAO;AAFJ,SAAP,EAGGvF,IAHH,CAGQ,UAASe,IAAT,EAAeP,IAAf,EAAqB;AACzBuC,uBAAWvC,SAAS,SAAT,IAAsBO,KAAKkB,OAAL,CAAa,6BAAb,MAAgD,CAAC,CAAlF;AACH,SALD,EAKGnB,KALH,CAKS,UAASC,IAAT,EAAeP,IAAf,EAAqB;AAC1BuC,uBAAW,KAAX;AACH,SAPD;AAQH,KAtBD;AAuBA,WAAOA,QAAP;AACH,CAnCD;;AAqCA;;;;AAIA7H,SAASsK,cAAT,GAA0B,YAAW;AACjC,QAAI,CAAC,CAAC3G,OAAO4G,qBAAb,EAAoC;AAChC,YAAIC,SAAS9B,SAAS+B,aAAT,CAAuB,QAAvB,CAAb;AAAA,YACIC,gBAAgB,CAAC,OAAD,EAAU,oBAAV,EAAgC,WAAhC,EAA6C,WAA7C,CADpB;AAAA,YAEIC,UAAU,KAFd;;AAIA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,cAAc1I,MAAlC,EAA0C4I,GAA1C,EAA+C;AAC3C,gBAAI;AACAD,0BAAUH,OAAOK,UAAP,CAAkBH,cAAcE,CAAd,CAAlB,CAAV;AACA,oBAAID,WAAW,OAAOA,QAAQG,YAAf,KAAgC,UAA/C,EAA2D;AACvD;AACA,2BAAO,IAAP;AACH;AACJ,aAND,CAME,OAAOC,CAAP,EAAU,CACX;AACJ;AACD;AACA,eAAO,KAAP;AACH;;AAED;AACA,WAAO,KAAP;AACH,CAtBD;;AAwBA;;;;AAIA/K,SAASgL,YAAT,GAAwB,UAASC,OAAT,EAAkB;AACtC,QAAMC,gBAAgBhJ,EAAE+I,OAAF,EAAW3C,IAAX,CAAgB,UAAhB,CAAtB;AAAA,QACI6C,iBAAiBD,cAAc5B,KAAd,CAAoB,GAApB,CADrB;AAAA,QAEI8B,UAAU,EAFd;;AAIA,SAAK,IAAIR,IAAI,CAAR,EAAWS,KAAKF,eAAenJ,MAApC,EAA4C4I,IAAIS,EAAhD,EAAoDT,GAApD,EAAyD;AACrD,YAAIU,MAAMH,eAAeP,CAAf,EAAkBtB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAV;AAAA,YACIiC,QAAQJ,eAAeP,CAAf,EAAkBtB,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CADZ;AAEA8B,gBAAQE,GAAR,IAAeC,KAAf;AACH;;AAED,WAAOH,OAAP;AACH,CAZD;;AAcA;;;;;;AAMApL,SAASwL,SAAT,GAAqB,UAAShD,IAAT,EAAe+C,KAAf,EAAsB;;AAEvC7C,aAASC,MAAT,GAAkBH,OAAO,GAAP,GAAavC,UAAUsF,KAAV,CAAb,GAAgC,UAAlD;AAEH,CAJD;;AAMA;;;;;;;;;;;AAWAvL,SAASyL,gBAAT,GAA4B,UAASC,QAAT,EAAmBzB,QAAnB,EAA6B/I,KAA7B,EAAoCC,MAApC,EAA4CwK,UAA5C,EAAwD;;AAEhF;AACA,QAAIxG,cAAJ;AACA,QAAIjE,SAASC,MAAb,EAAqB;;AAEjBgE,gBAAQ;AACJ,qBAASjE,KADL;AAEJ,sBAAUC,MAFN;AAGJ,qBAAS8I,SAAS/I,KAAT,GAAiBA;AAHtB,SAAR;AAMH;;AAED,QAAIiE,UAAUzE,SAAd,EACI,OAAO,EAAP;;AAEJ,QAAMkL,QAAQzG,MAAMyG,KAApB;AAAA,QACIC,qBAAqB5B,SAAS9I,MADlC;AAAA,QAEIW,SAAS6J,eAAejL,SAAf,GAA2BiL,UAA3B,GAAwC,CAFrD;;AAIA;AArBgF;AAAA;AAAA;;AAAA;AAsBhF,6BAAgBD,QAAhB,8HAA0B;AAAA,gBAAfd,CAAe;;;AAEtB,gBAAMkB,iBAAiBJ,SAASd,CAAT,EAAYmB,WAAZ,GAA0BC,cAA1B,GAA2C,CAA3C,CAAvB;AAAA,gBACIC,iBAAiB,EADrB;;AAGA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,eAAe9J,MAAnC,EAA2CkK,GAA3C,EAAgD;AAC5CD,+BAAehJ,IAAf,CACI,CAACnB,SAAU8J,QAAQE,eAAeI,CAAf,EAAkB,CAAlB,CAAnB,EAA0CL,qBAAsBD,QAAQE,eAAeI,CAAf,EAAkB,CAAlB,CAAxE,CADJ;AAEH;;AAEDR,qBAASd,CAAT,EAAYuB,WAAZ,CAAwB,IAAI7K,GAAG8K,IAAH,CAAQC,OAAZ,CAAoB,CAACJ,cAAD,CAApB,CAAxB;;AAEA;AACAjM,qBAASK,aAAT,IAA0B,CAA1B;AACAqL,qBAASd,CAAT,EAAY0B,KAAZ,CAAkB,KAAKtM,SAASK,aAAhC;AACH;AArC+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuChF,WAAOqL,QAAP;AAEH,CAzCD;;AA2CA;;;;;;AAMA1L,SAASuM,8BAAT,GAA0C,UAASC,iBAAT,EAA4BC,IAA5B,EAAkC;AACxE,QAAMf,WAAW,EAAjB;AACAc,sBAAkB1L,OAAlB,CAA0B,UAAS4L,EAAT,EAAa;AACnC,YAAIA,GAAGC,GAAH,CAAO,UAAP,MAAuBjM,SAA3B,EAAsC;AAClC,gBAAIgM,GAAGC,GAAH,CAAO,UAAP,EAAmBC,WAAnB,GAAiC7F,OAAjC,CAAyC0F,KAAKG,WAAL,EAAzC,IAA+D,CAAC,CAApE,EACIlB,SAASzI,IAAT,CAAcyJ,EAAd;AACP;AACJ,KALD;AAMA,WAAOhB,SAAS1J,MAAT,GAAkB,CAAlB,GAAsB0J,QAAtB,GAAiChL,SAAxC;AACH,CATD","file":"tx_dlf_utils.js","sourcesContent":["/**\n * (c) Kitodo. Key to digital objects e.V. <contact@kitodo.org>\n *\n * This file is part of the Kitodo and TYPO3 projects.\n *\n * @license GNU General Public License version 3 or later.\n * For the full copyright and license information, please read the\n * LICENSE.txt file that was distributed with this source code.\n */\n\n/**\n * Base namespace for utility functions used by the dlf module.\n *\n * @const\n */\nvar dlfUtils = dlfUtils || {};\n\n/**\n * @type {{ZOOMIFY: string}}\n */\ndlfUtils.CUSTOM_MIMETYPE = {\n    IIIF: 'application/vnd.kitodo.iiif',\n    IIP: 'application/vnd.netfpx',\n    ZOOMIFY: 'application/vnd.kitodo.zoomify'\n};\n\n/**\n * @type {number}\n */\ndlfUtils.RUNNING_INDEX = 99999999;\n\n/**\n * @param imageSourceObjs\n * @param {string} opt_origin\n * @return {Array.<ol.layer.Layer>}\n */\ndlfUtils.createOl3Layers = function(imageSourceObjs, opt_origin) {\n\n    let origin = opt_origin !== undefined ? opt_origin : null,\n        widthSum = 0,\n        offsetWidth = 0,\n        layers = [];\n\n    imageSourceObjs.forEach(function(imageSourceObj) {\n        let tileSize;\n        if (widthSum > 0) {\n            // set offset width in case of multiple images\n            offsetWidth = widthSum;\n        }\n\n        //\n        // Create layer\n        //\n        let extent = [offsetWidth, 0, imageSourceObj.width + offsetWidth, imageSourceObj.height],\n            layer;\n\n        if (imageSourceObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.ZOOMIFY) {\n            // create zoomify layer\n            layer = new ol.layer.Tile({\n                source: new ol.source.Zoomify({\n                    url: imageSourceObj.src,\n                    size: [imageSourceObj.width, imageSourceObj.height],\n                    crossOrigin: origin,\n                    offset: [offsetWidth, 0]\n                })\n            });\n        } else if (imageSourceObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.IIIF) {\n\n            tileSize = imageSourceObj.tilesize !== undefined && imageSourceObj.tilesize.length > 0\n                ? imageSourceObj.tilesize[0]\n                : 256,\n                format = $.inArray('jpg', imageSourceObj.formats) || $.inArray('jpeg', imageSourceObj.formats)\n                    ? 'jpg'\n                    : imageSourceObj.formats.length > 0\n                        ? imageSourceObj.formats[0]\n                        : 'jpg',\n                quality = imageSourceObj.qualities !== undefined && imageSourceObj.qualities.length > 0\n                    ? imageSourceObj.qualities[0]\n                    : 'native';\n\n            layer = new ol.layer.Tile({\n                source: new dlfViewerSource.IIIF({\n                    url: imageSourceObj.src,\n                    size: [imageSourceObj.width, imageSourceObj.height],\n                    crossOrigin: origin,\n                    resolutions: imageSourceObj.resolutions,\n                    tileSize: tileSize,\n                    format: format,\n                    quality: quality,\n                    offset: [offsetWidth, 0],\n                    projection: new ol.proj.Projection({\n                        code: 'goobi-image',\n                        units: 'pixels',\n                        extent: extent\n                    })\n                })\n            });\n        } else if (imageSourceObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.IIP) {\n            tileSize = imageSourceObj.tilesize !== undefined && imageSourceObj.tilesize.length > 0\n                ? imageSourceObj.tilesize[0]\n                : 256;\n\n            layer = new ol.layer.Tile({\n                source: new dlfViewerSource.IIP({\n                    url: imageSourceObj.src,\n                    size: [imageSourceObj.width, imageSourceObj.height],\n                    crossOrigin: origin,\n                    tileSize: tileSize,\n                    offset: [offsetWidth, 0]\n                })\n            });\n        } else {\n\n            // create static image source\n            layer = new ol.layer.Image({\n                source: new ol.source.ImageStatic({\n                    url: imageSourceObj.src,\n                    projection: new ol.proj.Projection({\n                        code: 'goobi-image',\n                        units: 'pixels',\n                        extent: extent\n                    }),\n                    imageExtent: extent,\n                    crossOrigin: origin\n                })\n            });\n        }\n        layers.push(layer);\n\n        // add to cumulative width\n        widthSum += imageSourceObj.width;\n    });\n\n    return layers;\n};\n\n/**\n * @param {Array.<{src: *, width: *, height: *}>} images\n * @return {ol.View}\n */\ndlfUtils.createOl3View = function(images) {\n\n    //\n    // Calculate map extent\n    //\n    let maxLonX = images.reduce(function(prev, curr) {\n            return prev + curr.width;\n        }, 0),\n        maxLatY = images.reduce(function(prev, curr) {\n            return Math.max(prev, curr.height);\n        }, 0),\n        extent = images[0].mimetype !== dlfUtils.CUSTOM_MIMETYPE.ZOOMIFY &&\n        images[0].mimetype !== dlfUtils.CUSTOM_MIMETYPE.IIIF &&\n        images[0].mimetype !== dlfUtils.CUSTOM_MIMETYPE.IIP\n            ? [0, 0, maxLonX, maxLatY]\n            : [0, -maxLatY, maxLonX, 0];\n\n    // globally define max zoom\n    window.OL3_MAX_ZOOM = 8;\n\n    // define map projection\n    const proj = new ol.proj.Projection({\n        code: 'goobi-image',\n        units: 'pixels',\n        extent: extent\n    });\n\n    // define view\n    const viewParams = {\n        projection: proj,\n        center: ol.extent.getCenter(extent),\n        zoom: 1,\n        maxZoom: window.OL3_MAX_ZOOM,\n        extent: extent\n    };\n\n    return new ol.View(viewParams);\n};\n\n/**\n * Returns true if the specified value is not undefiend\n * @param {?} val\n * @return {boolean}\n */\ndlfUtils.exists = function(val) {\n    return val !== undefined;\n};\n\n/**\n * Fetch image data for given image sources.\n *\n * @param {Array.<{url: *, mimetype: *}>} imageSourceObjs\n * @return {JQueryStatic.Deferred}\n */\ndlfUtils.fetchImageData = function(imageSourceObjs) {\n\n    // use deferred for async behavior\n    const deferredResponse = new $.Deferred();\n\n    /**\n     * This holds information about the loading state of the images\n     * @type {Array.<number>}\n     */\n    let imageSourceData = [],\n        loadCount = 0,\n        finishLoading = function() {\n            loadCount += 1;\n\n            if (loadCount === imageSourceObjs.length)\n                deferredResponse.resolve(imageSourceData);\n        };\n\n    imageSourceObjs.forEach(function(imageSourceObj, index) {\n        if (imageSourceObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.ZOOMIFY) {\n            dlfUtils.fetchZoomifyData(imageSourceObj)\n                .done(function(imageSourceDataObj) {\n                    imageSourceData[index] = imageSourceDataObj;\n                    finishLoading();\n                });\n        } else if (imageSourceObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.IIIF) {\n            dlfUtils.getIIIFResource(imageSourceObj)\n                .done(function(imageSourceDataObj) {\n                    imageSourceData[index] = imageSourceDataObj;\n                    finishLoading();\n                });\n        } else if (imageSourceObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.IIP) {\n            dlfUtils.fetchIIPData(imageSourceObj)\n                .done(function(imageSourceDataObj) {\n                    imageSourceData[index] = imageSourceDataObj;\n                    finishLoading();\n                });\n        } else {\n            // In the worse case expect static image file\n            dlfUtils.fetchStaticImageData(imageSourceObj)\n                .done(function(imageSourceDataObj) {\n                    imageSourceData[index] = imageSourceDataObj;\n                    finishLoading();\n                });\n        }\n    });\n\n    return deferredResponse;\n};\n\n\n/**\n * Fetches the image data for static images source.\n *\n * @param {{url: *, mimetype: *}} imageSourceObj\n * @return {JQueryStatic.Deferred}\n */\ndlfUtils.fetchStaticImageData = function(imageSourceObj) {\n\n    // use deferred for async behavior\n    const deferredResponse = new $.Deferred();\n\n    // Create new Image object.\n    const image = new Image();\n\n    // Register onload handler.\n    image.onload = function() {\n\n        const imageDataObj = {\n            src: this.src,\n            mimetype: imageSourceObj.mimetype,\n            width: this.width,\n            height: this.height\n        };\n\n        deferredResponse.resolve(imageDataObj);\n    };\n\n    // Initialize image loading.\n    image.src = imageSourceObj.url;\n\n    return deferredResponse;\n};\n\n/**\n * @param imageSourceObj\n * @returns {JQueryStatic.Deferred}\n */\ndlfUtils.getIIIFResource = function getIIIFResource(imageSourceObj) {\n\n    const deferredResponse = new $.Deferred();\n    const type = 'GET';\n    $.ajax({\n        url: dlfViewerSource.IIIF.getMetdadataURL(imageSourceObj.url),\n        type: type,\n        dataType: 'json'\n    }).done(cb).fail(error);\n\n    function cb(data) {\n        const mimetype = imageSourceObj.mimetype;\n        if (dlfUtils.supportsIIIF(data)) {\n            if (data.protocol && data.protocol === 'http://iiif.io/api/image') {\n                let uri = decodeURI(data['@id']);\n                uri = dlfUtils.removeInfoJson(uri);\n                const imageResource = dlfUtils.buildImageV2(mimetype, uri, data);\n                deferredResponse.resolve(imageResource);\n            } else {\n                let uri = imageSourceObj.url;\n                uri = dlfUtils.removeInfoJson(uri);\n                const imageResource = dlfUtils.buildImageV1(mimetype, uri, data);\n                deferredResponse.resolve(imageResource);\n            }\n        }\n    }\n\n    function error(jqXHR, errorThrown) {\n        console.log(\"error\", jqXHR.status);\n        console.log(\"status: \" + errorThrown);\n    }\n\n    return deferredResponse;\n};\n\n/**\n * @param uri\n * @returns {*}\n */\ndlfUtils.removeInfoJson = function removeInfoJson(uri) {\n    if (uri.endsWith('/info.json')) {\n        uri = uri.substr(0, uri.lastIndexOf('/'));\n    }\n    return uri;\n};\n\n/**\n *\n * @param data\n * @param data.protocol\n * @param data.identifier\n * @param data.width\n * @param data.height\n * @param data.profile\n * @param data.documentElement\n * @returns {boolean}\n */\ndlfUtils.supportsIIIF = function supportsIIIF(data) {\n    // Version 2.0 and forwards\n    if (data.protocol && data.protocol === 'http://iiif.io/api/image') {\n        return true;\n        // Version 1.1\n    } else if (data['@context'] && (\n        data['@context'] === \"http://library.stanford.edu/iiif/image-api/1.1/context.json\" ||\n        data['@context'] === \"http://iiif.io/api/image/1/context.json\")) {\n        return true;\n        // Version 1.0\n    } else if (data.profile &&\n        data.profile.indexOf(\"http://library.stanford.edu/iiif/image-api/compliance.html\") === 0) {\n        return true;\n    } else if (data.identifier && data.width && data.height) {\n        return true;\n    } else return (data.documentElement && \"info\" === data.documentElement.tagName &&\n    \"http://library.stanford.edu/iiif/image-api/ns/\" === data.documentElement.namespaceURI);\n};\n\n/**\n *\n * @param mimetype\n * @param uri\n * @param jsonld\n * @param jsonld.tiles\n * @param jsonld.width\n * @param jsonld.height\n * @param jsonld.profile\n * @param jsonld.scaleFactors\n * @returns {{src: *, width, height, tilesize: [*,*], qualities: *, formats: *, resolutions: *, mimetype: *}}\n */\ndlfUtils.buildImageV2 = function buildImageV2(mimetype, uri, jsonld) {\n\n    return {\n        src: uri,\n        width: jsonld.width,\n        height: jsonld.height,\n        tilesize: [jsonld.tiles.map(function(a) {\n            return a.width;\n        })[0], jsonld.tiles.map(function(a) {\n            return a.height;\n        })[0]],\n        qualities: jsonld.profile.map(function(a) {\n            return a\n        }).map(function(b) {\n            return b.qualities;\n        })[1],\n        formats: jsonld.profile.map(function(a) {\n            return a\n        }).map(function(b) {\n            return b.formats;\n        })[1],\n        resolutions: jsonld.tiles.map(function(a) {\n            return a.scaleFactors;\n        })[0],\n        mimetype: mimetype\n    };\n};\n\n/**\n *\n * @param mimetype\n * @param uri\n * @param jsonld\n * @param jsonld.width\n * @param jsonld.height\n * @param jsonld.scale_factors\n * @param jsonld.tile_width\n * @param jsonld.tile_height\n * @param jsonld.qualities\n * @param jsonld.formats\n * @returns {{src: *, width, height, tilesize: [*,*], qualities: *, formats: *, resolutions: *, mimetype: *}}\n */\ndlfUtils.buildImageV1 = function buildImageV1(mimetype, uri, jsonld) {\n\n    return {\n        src: uri,\n        width: jsonld.width,\n        height: jsonld.height,\n        tilesize: [jsonld.tile_width, jsonld.tile_height],\n        qualities: jsonld.qualities,\n        formats: jsonld.formats,\n        resolutions: jsonld.scale_factors,\n        mimetype: mimetype\n    };\n};\n\n\n/**\n * Fetches the image data for iip images source.\n *\n * @param {{url: *, mimetype: *}} imageSourceObj\n * @return {JQueryStatic.Deferred}\n */\ndlfUtils.fetchIIPData = function(imageSourceObj) {\n\n    // use deferred for async behavior\n    const deferredResponse = new $.Deferred();\n\n    $.ajax({\n        url: dlfViewerSource.IIP.getMetdadataURL(imageSourceObj.url)//'http://localhost:8000/fcgi-bin/iipsrv.fcgi?FIF=F4713/HD7.tif&obj=IIP,1.0&obj=Max-size&obj=Tile-size&obj=Resolution-number',\n    }).done(cb);\n    function cb(response, type) {\n        if (type !== 'success')\n            throw new Error('Problems while fetching ImageProperties.xml');\n\n        const imageDataObj = $.extend({\n            src: imageSourceObj.url,\n            mimetype: imageSourceObj.mimetype\n        }, dlfViewerSource.IIP.parseMetadata(response));\n\n        deferredResponse.resolve(imageDataObj);\n    }\n\n    return deferredResponse;\n};\n\n/**\n * Fetch image data for zoomify source.\n *\n * @param {{url: *, mimetype: *}} imageSourceObj\n * @return {JQueryStatic.Deferred}\n */\ndlfUtils.fetchZoomifyData = function(imageSourceObj) {\n\n    // use deferred for async behavior\n    const deferredResponse = new $.Deferred();\n\n    $.ajax({\n        url: imageSourceObj.url\n    }).done(cb);\n    function cb(response, type) {\n        if (type !== 'success')\n            throw new Error('Problems while fetching ImageProperties.xml');\n\n        const properties = $(response).find('IMAGE_PROPERTIES');\n\n        const imageDataObj = {\n            src: response.URL.substring(0, response.URL.lastIndexOf(\"/\") + 1),\n            width: parseInt(properties.attr('WIDTH')),\n            height: parseInt(properties.attr('HEIGHT')),\n            tilesize: parseInt(properties.attr('TILESIZE')),\n            mimetype: imageSourceObj.mimetype\n        };\n\n        deferredResponse.resolve(imageDataObj);\n    }\n\n    return deferredResponse;\n};\n\n/**\n * @param {string} name Name of the cookie\n * @return {string|null} Value of the cookie\n * @TODO replace unescape function\n */\ndlfUtils.getCookie = function(name) {\n\n    const results = document.cookie.match(\"(^|;) ?\" + name + \"=([^;]*)(;|$)\");\n\n    if (results) {\n\n        return decodeURI(results[2]);\n\n    } else {\n\n        return null;\n\n    }\n\n};\n\n/**\n * Returns url parameters\n * @returns {Object|undefined}\n */\ndlfUtils.getUrlParams = function() {\n    if (Object.prototype.hasOwnProperty.call(location, 'search')) {\n        const search = decodeURIComponent(location.search).slice(1).split('&'),\n            params = {};\n\n        search.forEach(function(item) {\n            const s = item.split('=');\n            params[s[0]] = s[1]\n        });\n\n        return params;\n    }\n    return undefined;\n\n};\n\n/**\n * Returns true if the specified value is null.\n * @param {?} val\n * @return {boolean}\n */\ndlfUtils.isNull = function(val) {\n    return val === null;\n};\n\n/**\n * Returns true if the specified value is null, empty or undefined.\n * @param {?} val\n * @return {boolean}\n */\ndlfUtils.isNullEmptyUndefinedOrNoNumber = function(val) {\n    return val === null || val === undefined || val === '' || isNaN(val);\n};\n\n/**\n * @param {Array.<{url: *, mimetype: *}>} imageObjs\n * @return {boolean}\n */\ndlfUtils.isCorsEnabled = function(imageObjs) {\n    // fix for proper working with ie\n    if (!window.location.origin) {\n        window.location.origin = window.location.protocol + '//' + window.location.hostname +\n            (window.location.port ? ':' + window.location.port : '');\n    }\n\n    // fetch data from server\n    // with access control allowed\n    let response = true;\n\n    imageObjs.forEach(function(imageObj) {\n        let url = imageObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.ZOOMIFY\n            ? imageObj.url.replace('ImageProperties.xml', 'TileGroup0/0-0-0.jpg')\n            :\n            imageObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.IIIF\n                ? dlfViewerSource.IIIF.getMetdadataURL(imageObj.url)\n                : imageObj.mimetype === dlfUtils.CUSTOM_MIMETYPE.IIP\n                ? dlfViewerSource.IIP.getMetdadataURL(imageObj.url)\n                : imageObj.url;\n\n        url =\n            window.location.origin + window.location.pathname + '?eID=tx_dlf_geturl_eid&url=' + encodeURIComponent(\n                url) + '&header=2';\n\n        $.ajax({\n            url: url,\n            async: false\n        }).done(function(data, type) {\n            response = type === 'success' && data.indexOf('Access-Control-Allow-Origin') !== -1;\n        }).error(function(data, type) {\n            response = false;\n        });\n    });\n    return response;\n};\n\n/**\n * Functions checks if WebGL is enabled in the browser\n * @return {boolean}\n */\ndlfUtils.isWebGLEnabled = function() {\n    if (!!window.WebGLRenderingContext) {\n        let canvas = document.createElement(\"canvas\"),\n            rendererNames = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"],\n            context = false;\n\n        for (let i = 0; i < rendererNames.length; i++) {\n            try {\n                context = canvas.getContext(rendererNames[i]);\n                if (context && typeof context.getParameter === \"function\") {\n                    // WebGL is enabled;\n                    return true;\n                }\n            } catch (e) {\n            }\n        }\n        // WebGL not supported\n        return false;\n    }\n\n    // WebGL not supported\n    return false;\n};\n\n/**\n * @param {Element} element\n * @return {Object}\n */\ndlfUtils.parseDataDic = function(element) {\n    const dataDicString = $(element).attr('data-dic'),\n        dataDicRecords = dataDicString.split(';'),\n        dataDic = {};\n\n    for (var i = 0, ii = dataDicRecords.length; i < ii; i++) {\n        var key = dataDicRecords[i].split(':')[0],\n            value = dataDicRecords[i].split(':')[1];\n        dataDic[key] = value;\n    }\n\n    return dataDic;\n};\n\n/**\n * Set a cookie value\n *\n * @param {string} name The key of the value\n * @param {?} value The value to save\n */\ndlfUtils.setCookie = function(name, value) {\n\n    document.cookie = name + \"=\" + decodeURI(value) + \"; path=/\";\n\n};\n\n/**\n * Scales down the given features geometries. as a further improvement this function\n * adds a unique id to every feature\n * @param {Array.<ol.Feature>} features\n * @param {Object} imageObj\n * @param {number} width\n * @param {number} height\n * @param {number=} opt_offset\n * @deprecated\n * @return {Array.<ol.Feature>}\n */\ndlfUtils.scaleToImageSize = function(features, imageObj, width, height, opt_offset) {\n\n    // update size / scale settings of imageObj\n    let image;\n    if (width && height) {\n\n        image = {\n            'width': width,\n            'height': height,\n            'scale': imageObj.width / width\n        }\n\n    }\n\n    if (image === undefined)\n        return [];\n\n    const scale = image.scale,\n        displayImageHeight = imageObj.height,\n        offset = opt_offset !== undefined ? opt_offset : 0;\n\n    // do rescaling and set a id\n    for (const i of features) {\n\n        const oldCoordinates = features[i].getGeometry().getCoordinates()[0],\n            newCoordinates = [];\n\n        for (let j = 0; j < oldCoordinates.length; j++) {\n            newCoordinates.push(\n                [offset + (scale * oldCoordinates[j][0]), displayImageHeight - (scale * oldCoordinates[j][1])]);\n        }\n\n        features[i].setGeometry(new ol.geom.Polygon([newCoordinates]));\n\n        // set index\n        dlfUtils.RUNNING_INDEX += 1;\n        features[i].setId('' + dlfUtils.RUNNING_INDEX);\n    }\n\n    return features;\n\n};\n\n/**\n * Search a feature collcetion for a feature with the given text\n * @param {Array.<ol.Feature>} featureCollection\n * @param {string} text\n * @return {Array.<ol.Feature>|undefined}\n */\ndlfUtils.searchFeatureCollectionForText = function(featureCollection, text) {\n    const features = [];\n    featureCollection.forEach(function(ft) {\n        if (ft.get('fulltext') !== undefined) {\n            if (ft.get('fulltext').toLowerCase().indexOf(text.toLowerCase()) > -1)\n                features.push(ft);\n        }\n    });\n    return features.length > 0 ? features : undefined;\n};"],"sourceRoot":"/home/christopher/IdeaProjects/kitodo-presentation/es6"}