{"version":3,"sources":["plugins/pageview/tests/spec/tx_dlf_ol3_source.spec.js"],"names":["describe","it","url","response","dlfViewerSource","IIIF","getMetdadataURL","expect","toBe","IIP","metadataStr","parseMetadata","width","height","tilesize","toEqual","resolutions"],"mappings":";;AAAA;;;;;;;;;;AAUAA,SAAS,0CAAT,EAAqD,YAAW;;AAE5DA,aAAS,oCAAT,EAA+C,YAAW;;AAEtDC,WAAG,+FAAH,EAAoG,YAAW;AAC3G,gBAAIC,MAAM,wBAAV;AAAA,gBACEC,WAAWC,gBAAgBC,IAAhB,CAAqBC,eAArB,CAAqCJ,GAArC,CADb;;AAGAK,mBAAOJ,aAAaD,MAAM,WAA1B,EAAuCM,IAAvC,CAA4C,IAA5C;AACH,SALD;;AAOAP,WAAG,kGAAH,EAAuG,YAAW;AAC9G,gBAAIC,MAAM,uBAAV;AAAA,gBACEC,WAAWC,gBAAgBC,IAAhB,CAAqBC,eAArB,CAAqCJ,GAArC,CADb;;AAGAK,mBAAOJ,aAAaD,MAAM,YAA1B,EAAwCM,IAAxC,CAA6C,IAA7C;AACH,SALD;AAOH,KAhBD;;AAkBAR,aAAS,mCAAT,EAA8C,YAAW;;AAErDC,WAAG,+FAAH,EAAoG,YAAW;AAC3G,gBAAIC,MAAM,0EAAV;AAAA,gBACIC,WAAWC,gBAAgBK,GAAhB,CAAoBH,eAApB,CAAoCJ,GAApC,CADf;;AAGAK,mBAAOJ,aAAaD,MAAM,+DAA1B,EAA2FM,IAA3F,CAAgG,IAAhG;AACH,SALD;;AAOAP,WAAG,uGAAH,EAA4G,YAAW;AACnH,gBAAIC,MAAM,sEAAV;AAAA,gBACIC,WAAWC,gBAAgBK,GAAhB,CAAoBH,eAApB,CAAoCJ,GAApC,CADf;;AAGAK,mBAAOJ,aAAaD,MAAM,gEAA1B,EAA4FM,IAA5F,CAAiG,IAAjG;AACH,SALD;;AAOAP,WAAG,4FAAH,EAAiG,YAAW;AACxG,gBAAIS,cAAc,6EAAlB;AAAA,gBACIP,WAAWC,gBAAgBK,GAAhB,CAAoBE,aAApB,CAAkCD,WAAlC,CADf;;AAGAH,mBAAOJ,SAASS,KAAhB,EAAuBJ,IAAvB,CAA4B,KAA5B;AACAD,mBAAOJ,SAASU,MAAhB,EAAwBL,IAAxB,CAA6B,KAA7B;AACAD,mBAAOJ,SAASW,QAAhB,EAA0BC,OAA1B,CAAkC,CAAC,GAAD,EAAM,GAAN,CAAlC;AACAR,mBAAOJ,SAASa,WAAhB,EAA6BD,OAA7B,CAAqC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,GAAzB,CAArC;AACH,SARD;AAUH,KA1BD;AA4BH,CAhDD","file":"tx_dlf_ol3_source.spec.js","sourcesContent":["/**\n * (c) Kitodo. Key to digital objects e.V. <contact@kitodo.org>\n *\n * This file is part of the Kitodo and TYPO3 projects.\n *\n * @license GNU General Public License version 3 or later.\n * For the full copyright and license information, please read the\n * LICENSE.txt file that was distributed with this source code.\n */\n\ndescribe('TestCases for the dlfViewerSource module', function() {\n\n    describe('Test dlfViewerSource.IIIF protocol', function() {\n\n        it('Test dlfViewerSource.IIIF.getMetadataURL for URL ending with slash returns valid metadata URL', function() {\n            var url = 'http://localhost:8000/',\n              response = dlfViewerSource.IIIF.getMetdadataURL(url);\n\n            expect(response === url + 'info.json').toBe(true);\n        });\n\n        it('Test dlfViewerSource.IIIF.getMetadataURL for URL ending without slash returns valid metadata URL', function() {\n            var url = 'http://localhost:8000',\n              response = dlfViewerSource.IIIF.getMetdadataURL(url);\n\n            expect(response === url + '/info.json').toBe(true);\n        });\n\n    });\n\n    describe('Test dlfViewerSource.IIP protocol', function() {\n\n        it('Test dlfViewerSource.IIP.getMetadataURL for URL with FIF parameter returns valid metadata URL', function() {\n            var url = 'http://localhost:8000/fcgi-bin/iipsrv.fcgi?FIF=hs-2007-16-a-full_tif.tif',\n                response = dlfViewerSource.IIP.getMetdadataURL(url);\n\n            expect(response === url + '&obj=IIP,1.0&obj=Max-size&obj=Tile-size&obj=Resolution-number').toBe(true);\n        });\n\n        it('Test dlfViewerSource.IIP.getMetadataURL for URL with missing FIF parameter returns valid metadata URL', function() {\n            var url = 'http://localhost:8000/fcgi-bin/iipsrv.fcgi/hs-2007-16-a-full_tif.tif',\n                response = dlfViewerSource.IIP.getMetdadataURL(url);\n\n            expect(response === url + '?&obj=IIP,1.0&obj=Max-size&obj=Tile-size&obj=Resolution-number').toBe(true);\n        });\n\n        it('Test dlfViewerSource.IIP.parseMetadata for correct metadata string returns metadata object', function() {\n            var metadataStr = 'IIP:1.0 \\nMax-size:29566 14321 \\nTile-size:256 256 \\nResolution-number:8 \\n',\n                response = dlfViewerSource.IIP.parseMetadata(metadataStr);\n\n            expect(response.width).toBe(29566);\n            expect(response.height).toBe(14321);\n            expect(response.tilesize).toEqual([256, 256]);\n            expect(response.resolutions).toEqual([1, 2, 4, 8, 16, 32, 64, 128]);\n        });\n\n    });\n\n});"],"sourceRoot":"/home/christopher/IdeaProjects/kitodo-presentation/es6"}